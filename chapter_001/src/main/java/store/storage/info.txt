мммм
+ думаю это самое главное научиться такое писать самому
 тут есть прикол в динамическом полиморфизме
вообщем делаем так
1. интерфейс стратегия он указывает что будем делать вот наша стратегия тут имеем метод АДД = добавить кудато продукт

2. общий класс Storage это внешняя оболочка над нашими хранилищами он имеет поле     private StorageStrategy strategy;
которое активируется в конструкторе поэтому когда мы создаем екземпляр Storage то туда запихиваем любую стратегию
а именно шоп или мусорник авто да что угодно главное чтобы оно имплементировало интерфейс стратегия и соответсвенно
реализовывала метод АДД

3. класс ControllQuality по сути типа мейна он себе в констуктор сразу запихивает лист всех наших стратегий
вот тут тоже фишка чтоб не париться все сюда скоок хош стратегий

4. и методом addToStorage перебираем лист и каждому стореджу пытаемся скормить фуд и чекаем взял или нет

п.с.  надо понимать что если делаем какоето действие то надо что то метод чтобы озвращал для того чтобы дальше можно это
все кумулятивно обрабатывать.
п.с.2. если где то чего то много общее выносим вверх и если можно то чего много групируем по коллекциям
Food -> apple, egg and so.
List<Storage> storages -> shop, trash and +++ ;
п.с.3 в колекциях методы часто возвращают булен или чето другое тут мы когда адд в лист то сразу его в переменную
тот булен